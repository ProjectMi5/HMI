extends layout

block content
    if error
        h1 ERROR
        p= error.Error
        p= error.code
        p= error.errno
        p= error.syscal

     if module
      div.row
        div.col-lg-12
          h1.page-header Output Module


      div.row
        div.col-lg-9
          if !module.automaticModeActive
            if module.automaticModeAvailable
              if module.automaticModeConnected
                div.alert.alert-warning
                  span.glyphicon.glyphicon-pause
                  strong  Attention:
                  |  Automatic mode is available but inactive.&nbsp;
                  | Press&nbsp;
                  a.glyphicon.glyphicon-play(onclick="socket.emit('socketUserChangeMode', true);", style="cursor: pointer")
                  |  to activate it.
              else
                div.alert.alert-danger
                  span.glyphicon.glyphicon-pause
                  strong  Attention:
                  |  Automatic mode is available but inactive.&nbsp;
                  | The module seems to be disconnected.
            else
              div.alert.alert-danger.alert-dismissable.fade.in(role='alert')
                button.close(type='button', data-dismiss='alert', aria-label='Close')
                  span(aria-hidden='true') Ã—
                span.glyphicon.glyphicon-stop
                strong  Attention:
                |  Automatic mode is not available. Either "zeroMQ" is not installed or it is disabled by configuration.
          else
            div.alert.alert-success
              span.glyphicon.glyphicon-play
              strong  Attention:
              |  Automatic mode is active. Press&nbsp;
              a.glyphicon.glyphicon-pause(onclick="socket.emit('socketUserChangeMode', true);", style="cursor: pointer")
              |  to deactivate it.


          div.panel.panel-default
            div.panel-heading
              i.fa.fa-clock-o.fa-fw
              | Next Task on this Module
              +feedbackButton("output-module")
            div.panel-body
              ul.timeline
                //- Wait for Execute
                li.timeline-inverted
                  div.timeline-badge(id=module.SkillInput[0].Execute.containerId+'badge')
                    i.fa.fa-cog.fa-spin(id=module.SkillInput[0].Execute.containerId+'icon')
                  div.timeline-panel
                    div.timeline-heading
                      h4.timeline-title
                        span.text-muted(id=module.SkillInput[0].Execute.containerId+'text') Waiting to get a task.
                      script.
                        function executeIsTrue(){
                            $("##{module.SkillInput[0].Execute.containerId}icon").removeClass('fa-cog fa-spin');
                            $("##{module.SkillInput[0].Execute.containerId}icon").addClass('fa-check');
                            $("##{module.SkillInput[0].Execute.containerId}badge").addClass('success');
                            $("##{module.SkillInput[0].Execute.containerId}text").html('Task received.');
                          }
                        socket.on("#{module.SkillInput[0].Execute.updateEvent}", function(data){
                          if(data === true){
                            executeIsTrue();
                          }
                        });
                        // Static information
                        if(#{module.SkillInput[0].Execute.value} === true){
                          console.log('mmExecute.value true beforehand');
                          executeIsTrue();
                        }

                //- Start Button
                li.timeline-inverted
                  div.timeline-badge(id=module.SkillOutput[0].Busy.containerId+'badge', onclick="socket.emit('#{module.SkillOutput[0].Busy.submitEvent}', true);", style="cursor: pointer")
                    i.fa.fa-play(id=module.SkillOutput[0].Busy.containerId+'icon')
                  div.timeline-panel
                    div.timeline-heading
                      h4.timeline-title
                        if module.automaticModeActive
                          span.text-muted(id=module.SkillOutput[0].Busy.containerId+'text') Automatic mode active.
                          script.
                            function busyIsTrue() {
                              $("##{module.SkillOutput[0].Busy.containerId}icon").removeClass('fa-play');
                              $("##{module.SkillOutput[0].Busy.containerId}icon").addClass('fa-cog fa-spin');
                              $("##{module.SkillOutput[0].Busy.containerId}badge").addClass('success');
                              $("##{module.SkillOutput[0].Busy.containerId}text").html('Started... Waiting for response by Camera Module.');
                              }
                        else
                          span.text-muted(id=module.SkillOutput[0].Busy.containerId+'text') Press when you are ready to start working.
                          script.
                            function busyIsTrue() {
                              $("##{module.SkillOutput[0].Busy.containerId}icon").addClass('fa-check');
                              $("##{module.SkillOutput[0].Busy.containerId}badge").addClass('success');
                              $("##{module.SkillOutput[0].Busy.containerId}text").html('Started...');
                            }
                      script.
                        function automaticModuleExecutionMessage(message){
                          $("##{module.SkillOutput[0].Busy.containerId}text").html(message);
                        }
                        socket.on("automaticModuleExecutionMessage", automaticModuleExecutionMessage);
                        socket.on("#{module.SkillOutput[0].Busy.updateEvent}", function(data){
                          if(data === true){
                            busyIsTrue();
                          }
                        });
                        if(#{module.SkillOutput[0].Busy.value}===true){
                          console.log('mmBusy.value true');
                          busyIsTrue();
                        }

                li.timeline-inverted
                  div.timeline-badge(id=module.SkillOutput[0].Done.containerId+'badge', onclick="socket.emit('#{module.SkillOutput[0].Done.submitEvent}', {value: true});", style="cursor: pointer")
                    i.fa.fa-stop
                  div.timeline-panel
                    div.timeline-heading
                      h4.timeline-title
                       span.text-muted(id=module.SkillOutput[0].Done.containerId+'text') Press when you finished the task.
                      script.
                       var userFullyFinished = 0; // global in DOM space? yes.
                       function doneIsTrue(){
                         $("##{module.SkillOutput[0].Busy.containerId}icon").removeClass('fa-cog fa-spin');
                         $("##{module.SkillOutput[0].Busy.containerId}icon").addClass('fa-check');
                         $("##{module.SkillOutput[0].Done.containerId}badge").addClass('success');
                         $("##{module.SkillOutput[0].Done.containerId}text").html('Done.');
                       }
                       socket.on("#{module.SkillOutput[0].Done.updateEvent}", function(data){
                         if(data === true){
                           doneIsTrue();
                         }
                       });
                       if(#{module.SkillOutput[0].Done.value}===true){
                         console.log('mmDone.value true');
                         doneIsTrue();
                       }

              script.
               socket.on("reloadPageOutput", function(data){
                console.log('Page Reload...');
                window.location.replace("/output");
               });

        //- MessageFeed
        //- div.col-lg-3
          //- +messageFeed-panel()
    else
        div.col-xs-12.well
            p no handModule data to display
    
    